#!/usr/bin/env python
from __future__ import print_function

import sys

#
# Moogle imports
#
from config import config
from collection import DocumentCollection
from vertformatanalyzer import VertFormatAnalyzer

#
# Lucene imports
#
import lucene
from lucene import SimpleFSDirectory, File, IndexWriter, IndexWriterConfig, Version, Document, Field, StandardAnalyzer

class Index(object):
    def __init__(self, location):
        lucene.initVM()
        directory = SimpleFSDirectory(File(location))
        analyzer = VertFormatAnalyzer()
        writer_config = IndexWriterConfig(Version.LUCENE_CURRENT, analyzer)
        self.writer = IndexWriter(directory, writer_config)


    def index_document(self, document):
        doc = Document()
        doc.add(Field("docid", document.docid, Field.Store.YES, Field.Index.NO))
        doc.add(Field("title", document.title, Field.Store.NO, Field.Index.ANALYZED))
        doc.add(Field("heading", document.heading, Field.Store.NO, Field.Index.ANALYZED))
        doc.add(Field("text", document.text, Field.Store.NO, Field.Index.ANALYZED))
        self.writer.addDocument(doc)

    def optimize(self):
        print("Optimizing index...", end=" ", file=sys.stderr)
        self.writer.optimize()
        print("Done", file=sys.stderr)

    def close(self):
        print("Closing index...", end=" ", file=sys.stderr)
        self.writer.close()
        print("Done", file=sys.stderr)


def main():    


    documents = DocumentCollection(config.file_list, prefix=config.prefix)

    index = Index(config.index)

    print("Adding documents", end="", file=sys.stderr)
    for document in documents:
        index.index_document(document)
        print(".", end="", file=sys.stderr)
    print()

    index.optimize()
    index.close()

if __name__ == '__main__':
    main()
